[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://4w7eu7jvv15w"]

[sub_resource type="VisualShaderNodeColorConstant" id="1"]

[sub_resource type="VisualShaderNodeTexture" id="2"]
source = 2

[sub_resource type="VisualShaderNodeVectorOp" id="3"]
operator = 6

[sub_resource type="VisualShaderNodeVectorOp" id="4"]
operator = 2

[sub_resource type="VisualShaderNodeBooleanParameter" id="5"]
parameter_name = "active"

[resource]
code = "shader_type canvas_item;
uniform bool active;



void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, UV);


// BooleanParameter:9
	bool n_out9p0 = active;


// ColorConstant:11
	vec4 n_out11p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out9p0 ? 1.0 : 0.0) * vec3(n_out11p0.xyz);


// VectorOp:5
	vec3 n_out5p0 = max(vec3(n_out3p0.xyz), n_out6p0);


// Output:0
	COLOR.rgb = n_out5p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1040, 60)
nodes/fragment/3/node = SubResource("2")
nodes/fragment/3/position = Vector2(600, -40)
nodes/fragment/5/node = SubResource("3")
nodes/fragment/5/position = Vector2(860, -60)
nodes/fragment/6/node = SubResource("4")
nodes/fragment/6/position = Vector2(600, 100)
nodes/fragment/9/node = SubResource("5")
nodes/fragment/9/position = Vector2(400, 0)
nodes/fragment/11/node = SubResource("1")
nodes/fragment/11/position = Vector2(400, 120)
nodes/fragment/connections = PackedInt32Array(3, 0, 5, 0, 6, 0, 5, 1, 5, 0, 0, 0, 9, 0, 6, 0, 11, 0, 6, 1)
